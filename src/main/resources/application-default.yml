start-state: &startState start
error-state: &errorEvent error 

transition: 
  - from-state: *startState
    to-state: &bot bot
    on-strings: 
      - "<@!814147231568887828>"
    on-events: 
      - type: equals-ignore-case
        value: bot
      - type: equals-ignore-case
        value: paimon
 
##### log out / shutdown
  - from-state: *bot
    to-state: do.log-out
    on-strings: 
      - shutdown 
      - log out
    call-actions: 
      - allow.only-owner
      - do.log-out

##### join current voice channel
  - from-state: *bot
    to-state: &state_join_author_channel join.author.voiceChannel
    on-strings: 
      - come here
    call-actions: &action_join_author_channel
      - allow.admins-or-owner
      - get.authorVoiceChannel     
      - do.join-authorVoiceChannel

  - from-state: *bot
    to-state: &join join.channel
    on-strings: 
      - join 
    
  - from-state: *join
    to-state: *state_join_author_channel
    on-strings: 
      - here
      - me
      - current channel
      - this channel
    call-actions: *action_join_author_channel

#####----- join user voice channel
  - from-state: *join
    to-state: prepare.join.user.voiceChannel
    on-events: 
      - type: pattern
        value: "[uU][sS][eE][rR][ ]+\\d+"
      - type: pattern
        value: "\\d+"
      - type: pattern
        value: "[<][@][!]\\d+[>]"
    call-actions:
      - set.targetUser
      - do.join-userVoiceChannel


##### join target channel
  - from-state: *join
    to-state: &join_target_voiceChannel join.target.voiceChannel
    on-events: 
      - type: pattern
        value: "\\d+"
      - type: pattern
        value: "[<][#]\\d+[>]"
    call-actions: 
      - set.toVoiceChannel
      - do.join-voiceChannel

  - from-state: *join
    to-state: &state_join_channel join.channel.prepare
    on-strings: 
      - channel
      - voice channel
      
  - from-state: *state_join_channel
    to-state: *join_target_voiceChannel
    on-events: 
      - type: pattern
        value: "\\d+"
      - type: pattern
        value: "[<][#]\\d+[>]"
    call-actions: 
      - set.toVoiceChannel
      - do.join-voiceChannel

##### leave current voice channel
  - from-state: *bot
    to-state: &leave leave.channel
    on-strings: 
      - leave channel
      - get out
      - quit
      - exit
    call-actions: 
      - get.currentBotVoiceChannel
      - do.leave-voiceChannel
      
  - from-state: *bot
    to-state: *leave
    on-events: 
      - type: pattern
        value: "[lL][eE][aA][vV][eE][ ]+[\\d]+"
      - type: pattern
        value: "[lL][eE][aA][vV][eE][ ]+[<][#][\\d]+[>]"
    call-actions: 
      - set.toVoiceChannel
      - do.leave-voiceChannel
      
#### play sound to author
  - from-state: *bot
    to-state: &prepare_play prepare-play
    on-strings: 
      - play
    call-actions: 
      - validate.bot-in-authorVoiceChannel
      
  - from-state: *prepare_play
    to-state: &playing_sound playing
    on-events: 
      - type: pattern
        value: ".*"
    call-actions: 
      - allow.admins-or-owner
      - set.leave-VoiceChannel-after-AudioEnd
      - do.playAudio-inVoiceChannel
      
#### play sound to user
      
      
      
#### play sound to voiceChannel
      
      
      
#### stop sound
  - from-state: *bot
    to-state: stop-play
    on-strings: 
      - stop
    on-events: 
      - type: pattern
        value: "music[ ]+stop"
      - type: pattern
        value: "audio[ ]+stop"
      - type: pattern
        value: "sound[ ]+stop"
    call-actions: 
      - do.stopAudio-inVoiceChannel

#### cron

#### schedule alert



#### query alert






